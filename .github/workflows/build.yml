# Configuración de integración con SonarCloud para análisis de calidad de código
# Este workflow se ejecuta cuando hay push a main o se abre/actualiza un PR
name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest # Usamos Ubuntu para mejor compatibilidad con .NET en entornos CI/CD
    steps:
      # Configuramos Java 17, necesario para ejecutar el análisis de SonarQube
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      
      # Configuramos .NET 8.x para el proyecto
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      # Obtenemos el código fuente con historial completo para análisis profundo
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necesario para que SonarCloud pueda analizar el historial de cambios
      
      # Cacheamos los paquetes de SonarCloud para mejorar el rendimiento
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      # Instalamos una versión específica de SonarScanner (5.13.0)
      # Usamos esta versión porque es estable y compatible con el análisis de .NET
      # Las versiones más recientes (>5.14) presentan errores con la característica addImpact
      # en problemas externos (java.lang.UnsupportedOperationException: addImpact is not supported on external issues)
      - name: Install SonarCloud scanner
        shell: bash
        run: |
          dotnet tool install --global dotnet-sonarscanner --version 5.13.0
      
      # Ejecutamos el análisis: iniciamos SonarScanner, compilamos el proyecto, y finalizamos el análisis
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Para acceso a información del repositorio y PR
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    
        shell: bash
        run: |
          dotnet-sonarscanner begin /k:"10xGuatemala_DiezX.Api.Commons" /o:"10x-guatemala-public" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build --configuration Release
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
