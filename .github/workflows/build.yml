# Configuración de integración con SonarCloud para análisis de calidad de código
# Este workflow se ejecuta cuando hay push a main o se abre/actualiza un PR
name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest # Usamos Ubuntu para mejor compatibilidad con .NET en entornos CI/CD
    steps:
      # Configuramos Java 17, necesario para ejecutar el análisis de SonarQube
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      
      # Configuramos .NET 8.x para el proyecto
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      # Obtenemos el código fuente con historial completo para análisis profundo
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necesario para análisis de historial
      
      # Compilamos el proyecto .NET
      - name: Build .NET project
        run: dotnet build --configuration Release
      
      # Solución utilizando la acción oficial de SonarCloud para evitar
      # el error: java.lang.UnsupportedOperationException: addImpact is not supported on external issues
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=10xGuatemala_DiezX.Api.Commons
            -Dsonar.organization=10x-guatemala-public
            -Dsonar.sources=.
